#include <Keypad.h>
#include <LiquidCrystal_I2C.h>

#define ROWS  4
#define COLS  4

int lcdColumns = 16;
int lcdRows = 2;

LiquidCrystal_I2C lcd(0x27, lcdColumns, lcdRows);

char keyMap[ROWS][COLS] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};

uint8_t rowPins[ROWS] = {14, 27, 26, 25}; // GIOP14, GIOP27, GIOP26, GIOP25
uint8_t colPins[COLS] = {33, 32, 18, 19}; // GIOP33, GIOP32, GIOP18, GIOP19

Keypad keypad = Keypad(makeKeymap(keyMap), rowPins, colPins, ROWS, COLS);

String correctPassword = "836"; // The correct password
String enteredPassword = "";    // To store user input

void setup() {
  Serial.begin(115200);
  lcd.init();
  lcd.backlight();
  lcd.setCursor(0, 0);
  lcd.print("Enter Password:");
}

void loop() {
  char key = keypad.getKey(); // Get the pressed key

  if (key) { // If a key is pressed
    if (key == 'D') { // Validate the password
      lcd.clear();
      if (enteredPassword == correctPassword) {
        lcd.setCursor(0, 0);
        lcd.print("Access Granted!");
        delay(2000);
        lcd.clear();
        lcd.print("Waiting 30 sec...");
        delay(30000); // Simulate the 30-second delay
        lcd.clear();
        lcd.print("Enter Password:");
        enteredPassword = ""; // Reset password
      } else {
        lcd.setCursor(0, 0);
        lcd.print("Access Denied!");
        delay(2000);
        lcd.clear();
        lcd.print("Enter Password:");
        enteredPassword = ""; // Clear entered password
      }
    } else if (key == 'C') { // Clear password
      enteredPassword = "";
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Password Cleared");
      delay(2000);
      lcd.clear();
      lcd.print("Enter Password:");
    } else if (key == 'A') { // Delete last character
      if (enteredPassword.length() > 0) {
        enteredPassword.remove(enteredPassword.length() - 1);
        lcd.clear();
        lcd.setCursor(0, 0);
        lcd.print("Deleted: ");
        lcd.print(enteredPassword);
        delay(2000);
        lcd.clear();
        lcd.print("Enter Password:");
      }
    } else { // Append the key to the entered password
      if (enteredPassword.length() < 16) { // Limit the length to prevent overflow
        enteredPassword += key;
        lcd.clear();
        lcd.setCursor(0, 0);
        lcd.print("Entered: ");
        lcd.print(enteredPassword);
      } else {
        lcd.clear();
        lcd.setCursor(0, 0);
        lcd.print("Max Length Reached");
        delay(2000);
        lcd.clear();
        lcd.print("Enter Password:");
      }
    }
  }
}

